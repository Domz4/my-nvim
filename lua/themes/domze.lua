local M = {}

M.base_30 = {
  white = "#cccdd1",
  darker_black = "#0a0a0a",
  black = "#101010", --  nvim bg
  black2 = "#181818",
  one_bg = "#1e1e1e",
  one_bg2 = "#252525",
  one_bg3 = "#2c2c2c",
  grey = "#363636",
  grey_fg = "#601030",
  grey_fg2 = "#454545",
  light_grey = "#4d4d4d",
  red = "#ff1a67",
  baby_pink = "#ff86b7",
  pink = "#ff77a8",
  line = "#2c2c2c", -- for lines like vertsplit
  green = "#00e756",
  vibrant_green = "#10f766",
  blue = "#29adff",
  nord_blue = "#5c6ab2",
  yellow = "#fff024",
  sun = "#fff82c",
  purple = "#a79ac0",
  dark_purple = "#998cb2",
  teal = "#0b925c",
  orange = "#ffa300",
  cyan = "#29adff",
  statusline_bg = "#181818",
  lightbg = "#272727",
  pmenu_bg = "#b389ef",
  folder_bg = "#ff6ff9",
}

M.base_16 = {
  -- base00 = "#091212",
  -- base01 = "#242B2A",
  -- base02 = "#3C403F",
  -- base03 = "#4E5150",
  -- base04 = "#62d6e8",
  -- base05 = "#ffffff",
  -- base06 = "#FF0044",
  -- base07 = "#73949C",
  -- base08 = "#309Cb7",
  -- base09 = "#95BBC4",
  -- base0A = "#ff0044", -- alt 335588
  -- base0B = "#ff8350",
  -- base0C = "#9bf9fd",
  -- base0E = "#335588",
  -- base0D = "#ccddff",
  -- base0F = "#ffccaa",

  base00 = "#101010",
  base01 = "#171717",
  base02 = "#3e223e",
  base03 = "#252525",
  base04 = "#2c2c2c",
  base05 = "#d8d9dd",
  base06 = "#d2d3d7",
  base07 = "#cccdd1",
  base08 = "#2a9d8f",
  base09 = "#ff004d",
  base0A = "#e9c46a",
  base0B = "#f4a261",
  base0C = "#e76e51",
  base0D = "#901430",
  base0E = "#ffffff",
  base0F = "#ffccaa",
}

M.polish_hl = {
  syntax = {
    Type = { fg = "#ff0044" },
  },

  treesitter = {
    ["@variable"] = { fg = "#ff0044" },
    ["@number"] = { fg = "#b389ef" },
    ["@number.float"] = { fg = "#ff6ff9" },
    ["@function"] = { fg = "#ff0044" },
    -- ["@keyword.modifier"] = { fg = "#ff0044" },
    -- ["@attribute"] = { fg = "#ff0044" },
    -- ["@keyword.conditional"] = { fg = "#ff0044" },
  },
}
-- Boolean = { fg = theme.base09 },
-- Character = { fg = theme.base08 },
-- Conditional = { fg = theme.base0E },
-- Constant = { fg = theme.base08 },
-- Define = { fg = theme.base0E, sp = "none" },
-- Delimiter = { fg = theme.base0F },
-- Float = { fg = theme.base09 },
-- Variable = { fg = theme.base05 },
-- Function = { fg = theme.base0D },
-- Identifier = { fg = theme.base08, sp = "none" },
-- Include = { fg = theme.base0D },
-- Keyword = { fg = theme.base0E },
-- Label = { fg = theme.base0A },
-- Number = { fg = theme.base09 },
-- Operator = { fg = theme.base05, sp = "none" },
-- PreProc = { fg = theme.base0A },
-- Repeat = { fg = theme.base0A },
-- Special = { fg = theme.base0C },
-- SpecialChar = { fg = theme.base0F },
-- Statement = { fg = theme.base08 },
-- StorageClass = { fg = theme.base0A },
-- String = { fg = theme.base0B },
-- Structure = { fg = theme.base0E },
-- Tag = { fg = theme.base0A },
-- ["@variable"] = { fg = theme.base05 },
-- ["@variable.builtin"] = { fg = theme.base09 },
-- ["@variable.parameter"] = { fg = theme.base08 },
-- ["@variable.member"] = { fg = theme.base08 },
-- ["@variable.member.key"] = { fg = theme.base08 },
--
-- ["@module"] = { fg = theme.base08 },
-- -- ["@module.builtin"] = { fg = theme.base08 },
--
-- ["@constant"] = { fg = theme.base08 },
-- ["@constant.builtin"] = { fg = theme.base09 },
-- ["@constant.macro"] = { fg = theme.base08 },
--
-- ["@string"] = { fg = theme.base0B },
-- ["@string.regex"] = { fg = theme.base0C },
-- ["@string.escape"] = { fg = theme.base0C },
-- ["@character"] = { fg = theme.base08 },
-- -- ["@character.special"] = { fg = theme.base08 },
-- ["@number"] = { fg = theme.base09 },
-- ["@number.float"] = { fg = theme.base09 },
--
-- ["@annotation"] = { fg = theme.base0F },
-- ["@attribute"] = { fg = theme.base0A },
-- ["@error"] = { fg = theme.base08 },
--
-- ["@keyword.exception"] = { fg = theme.base08 },
-- ["@keyword"] = { fg = theme.base0E },
-- ["@keyword.function"] = { fg = theme.base0E },
-- ["@keyword.return"] = { fg = theme.base0E },
-- ["@keyword.operator"] = { fg = theme.base0E },
-- ["@keyword.import"] = { link = "Include" },
-- ["@keyword.conditional"] = { fg = theme.base0E },
-- ["@keyword.conditional.ternary"] = { fg = theme.base0E },
-- ["@keyword.repeat"] = { fg = theme.base0A },
-- ["@keyword.storage"] = { fg = theme.base0A },
-- ["@keyword.directive.define"] = { fg = theme.base0E },
-- ["@keyword.directive"] = { fg = theme.base0A },
--
-- ["@function"] = { fg = theme.base0D },
-- ["@function.builtin"] = { fg = theme.base0D },
-- ["@function.macro"] = { fg = theme.base08 },
-- ["@function.call"] = { fg = theme.base0D },
-- ["@function.method"] = { fg = theme.base0D },
-- ["@function.method.call"] = { fg = theme.base0D },
-- ["@constructor"] = { fg = theme.base0C },
--
-- ["@operator"] = { fg = theme.base05 },
-- ["@reference"] = { fg = theme.base05 },
-- ["@punctuation.bracket"] = { fg = theme.base0F },
-- ["@punctuation.delimiter"] = { fg = theme.base0F },
-- ["@symbol"] = { fg = theme.base0B },
-- ["@tag"] = { fg = theme.base0A },
-- ["@tag.attribute"] = { fg = theme.base08 },
-- ["@tag.delimiter"] = { fg = theme.base0F },
-- ["@text"] = { fg = theme.base05 },
-- ["@text.emphasis"] = { fg = theme.base09 },
-- ["@text.strike"] = { fg = theme.base0F, strikethrough = true },
-- ["@type.builtin"] = { fg = theme.base0A },
-- ["@definition"] = { sp = theme.base04, underline = true },
-- ["@scope"] = { bold = true },
-- ["@property"] = { fg = theme.base08 },
-- -- markup
-- ["@markup.heading"] = { fg = theme.base0D },
-- ["@markup.raw"] = { fg = theme.base09 },
-- ["@markup.link"] = { fg = theme.base08 },
-- ["@markup.link.url"] = { fg = theme.base09, underline = true },
-- ["@markup.link.label"] = { fg = theme.base0C },
-- ["@markup.list"] = { fg = theme.base08 },
-- ["@markup.strong"] = { bold = true },
-- ["@markup.underline"] = { underline = true },
-- ["@markup.italic"] = { italic = true },
-- ["@markup.strikethrough"] = { strikethrough = true },
-- ["@markup.quote"] = { bg = base30.black2 },
-- ["@comment"] = { fg = base30.grey_fg },- Todo = { fg = theme.base0A, bg = theme.base01

M.type = "dark"

M = require("base46").override_theme(M, "domze")
return M
